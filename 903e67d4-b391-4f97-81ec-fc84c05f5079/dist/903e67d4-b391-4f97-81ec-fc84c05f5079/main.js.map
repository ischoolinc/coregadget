{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/app/help-class.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".setBtn {\\n    cursor: pointer;\\n}\\n.thBorder {\\n    background: #eee;\\n}\"","module.exports = \"<div>\\n  <h1>導師-線上點名</h1>\\n  <div>\\n    <div *ngIf=\\\"canCrossDate\\\" style=\\\"margin-top:15px;\\\">\\n      <span>日期：</span>\\n      <div style=\\\"position: relative;display: inline-block;vertical-align: middle;\\\">\\n        <div class=\\\"input-group input-group-sm\\\"\\n             style=\\\"width:380px;\\\">\\n          <input type=\\\"text\\\"\\n                 class=\\\"form-control\\\"\\n                 [ngModel]=\\\"inputDate\\\"\\n                 (ngModelChange)=\\\"checkDate($event)\\\" />\\n          <span class=\\\"input-group-btn\\\">\\n            <button type=\\\"button\\\"\\n                    class=\\\"btn btn-default\\\"\\n                    (click)=\\\"setCurrentDate(todayDate)\\\"\\n                    [ngClass]=\\\"{'btn-primary': getDateString(currentDate)==getDateString(todayDate)}\\\">今天\\n            </button>\\n            <button type=\\\"button\\\"\\n                    (click)=\\\"setCurrentDate(currentDate, -1)\\\"\\n                    class=\\\"btn btn-default\\\">前一天\\n            </button>\\n            <button type=\\\"button\\\"\\n                    (click)=\\\"setCurrentDate(currentDate, 1)\\\"\\n                    class=\\\"btn btn-default\\\">後一天\\n            </button>\\n            <button type=\\\"button\\\"\\n                    (click)=\\\"setCurrentDate(currentDate, -7)\\\"\\n                    class=\\\"btn btn-default\\\">上一週\\n            </button>\\n            <button type=\\\"button\\\"\\n                    (click)=\\\"setCurrentDate(currentDate, 7)\\\"\\n                    class=\\\"btn btn-default\\\">下一週\\n            </button>\\n          </span>\\n        </div>\\n      </div>\\n      <span *ngIf=\\\"inputDate!=getDateString(currentDate)\\\"\\n            class=\\\"text-danger\\\">日期格式錯誤</span>\\n    </div>\\n    <div *ngIf=\\\"!canCrossDate\\\" style=\\\"margin-top:15px;\\\">\\n      <span>日期：{{getDateString(todayDate)}}</span>\\n    </div>\\n    <div style=\\\"margin-top:15px;\\\">\\n      <span>請選擇班級：</span>\\n      <div class=\\\"btn-group\\\"\\n           role=\\\"group\\\"\\n           aria-label=\\\"假別\\\">\\n        <button *ngFor=\\\"let item of classes\\\"\\n                (click)=\\\"toggleClassDate(item)\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm\\\"\\n                [ngClass]=\\\"{'btn-primary': selClass==item, 'btn-default': selClass!=item}\\\">{{item.className}}</button>\\n      </div>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"selClass\\\">\\n    <div style=\\\"margin-top:15px;\\\">\\n      <span>請選擇假別：</span>\\n      <div class=\\\"btn-group\\\"\\n           role=\\\"group\\\"\\n           aria-label=\\\"假別\\\">\\n        <button (click)=\\\"currAbs=clearAbs\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm\\\"\\n                [ngClass]=\\\"{'btn-primary': currAbs==clearAbs, 'btn-default': currAbs!=clearAbs}\\\">清除</button>\\n        <button *ngFor=\\\"let abs of absences\\\"\\n                (click)=\\\"currAbs=abs\\\"\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-sm\\\"\\n                [ngClass]=\\\"{'btn-primary': currAbs==abs, 'btn-default': currAbs!=abs}\\\">{{abs.name}}</button>\\n      </div>\\n    </div>\\n    <table class=\\\"table table-bordered table-hover table-striped\\\"\\n           style=\\\"margin-top: 15px;\\\">\\n      <thead>\\n        <tr>\\n          <th class=\\\"thBorder\\\"\\n              style=\\\"min-width:110px;\\\">\\n            <div *ngIf=\\\"getDateString(currentDate)==getDateString(todayDate)\\\">\\n              <div class=\\\"btn-group\\\">\\n                <button (click)=\\\"saveData()\\\"\\n                        type=\\\"button\\\"\\n                        class=\\\"btn btn-sm\\\"\\n                        [ngClass]=\\\"{'btn-success': completed=='t', 'btn-warning': completed!='t'}\\\">\\n                  {{(completed=='t') ? '儲存變更' : '完成點名'}}\\n                </button>\\n              </div>\\n              <span *ngIf=\\\"completed=='t'\\\"\\n                    class=\\\"text-muted\\\">\\n                已點名\\n              </span>\\n            </div>\\n            <div *ngIf=\\\"getDateString(currentDate)!=getDateString(todayDate)\\\">\\n              <div class=\\\"btn-group\\\">\\n                <button (click)=\\\"saveData()\\\"\\n                        type=\\\"button\\\"\\n                        class=\\\"btn btn-sm btn-danger\\\">\\n                  儲存變更\\n                </button>\\n              </div>\\n              <span *ngIf=\\\"completed=='t'\\\"\\n                    class=\\\"text-danger\\\">\\n                {{getDateString(currentDate)}}\\n              </span>\\n            </div>\\n          </th>\\n          <th *ngFor=\\\"let period of periods\\\"\\n              (click)=\\\"setAllStudentsAbs(period)\\\"\\n              class=\\\"setBtn thBorder text-center\\\">\\n            {{period.name}}\\n          </th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n        <ng-container *ngFor=\\\"let stu of students;let i = index\\\">\\n          <tr *ngIf=\\\"i > 0 && i % 5 ==0\\\">\\n            <th class=\\\"thBorder\\\">\\n            </th>\\n            <th *ngFor=\\\"let period of periods\\\"\\n                (click)=\\\"setAllStudentsAbs(period)\\\"\\n                class=\\\"setBtn thBorder text-center\\\">\\n              {{period.name}}\\n            </th>\\n          </tr>\\n          <tr>\\n            <td (click)=\\\"setStudentAllPeriodAbs(stu)\\\"\\n                class=\\\"setBtn\\\">\\n              {{stu.seatNo}}. {{stu.name}}\\n            </td>\\n            <td *ngFor=\\\"let period of periods\\\"\\n                (click)=\\\"setStudentPeroidAbs(stu, period)\\\"\\n                title=\\\"{{period.name}}\\\"\\n                class=\\\"setBtn\\\"\\n                style=\\\"position:relative\\\">\\n              <div *ngIf=\\\"stu.leaveList.get(period.name)?.absName != stu.orileaveList.get(period.name)?.absName\\\"\\n                   style=\\\"display:inline-block;background-color:red;position:absolute;left:3px;top:3px;width:5px;height:6px;border-radius:5px;\\\"></div>\\n              <span>{{toShort(stu.leaveList.get(period.name)?.absName)}}</span>\\n            </td>\\n          </tr>\\n        </ng-container>\\n      </tbody>\\n    </table>\\n    <p *ngIf=\\\"students.length==0\\\">目前無資料</p>\\n  </div>\\n</div>\"","import { Component, OnInit, ChangeDetectorRef, Input, Output, EventEmitter } from '@angular/core';\nimport { Class, Student, Absence, Period, Leave } from \"./help-class\";\nimport { AppService } from \"./app.service\";\nimport * as rx from 'rxjs/Rx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  selClass: Class;\n  currAbs: Absence;\n  classes: Class[] = new Array<Class>();\n  /**假別 */\n  absences: Absence[] = new Array<Absence>();\n  clearAbs: Absence = new Absence(null, null);\n  /**節次 */\n  periods: Period[] = new Array<Period>();\n  periodMap: Map<string, Period> = new Map<string, Period>();\n  students: Student[] = new Array<Student>();\n  classSubject$: rx.Subject<Class> = new rx.Subject();\n  /**今天該班點名狀態 */\n  completed: boolean;\n  /**允許跨日設定 */\n  canCrossDate = false;\n\n  currentDate: Date = new Date(new Date().toDateString());\n  todayDate: Date = new Date(new Date().toDateString());\n\n  inputDate: string;\n\n  constructor(private appService: AppService, private change: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    // 預設值\n    this.currAbs = this.clearAbs;\n    this.completed = false;\n    this.inputDate = this.getDateString(this.currentDate);\n\n    // 取得假別、節次、老師帶班\n    rx.Observable.combineLatest(\n      this.appService.getConfig(),\n      this.appService.getAbsences(),\n      this.appService.getPeriods(),\n      this.appService.getMyClass(), (config, x, y, z) => {\n        this.canCrossDate = config.crossDate;\n        // 比對設定檔，為 true 的假別才顯示\n        if (config.absenceNames.length) {\n          const absencesList: Absence[] = [];\n          for (const item of x) {\n            if (config.absenceNames.indexOf(item.name) !== -1) {\n              absencesList.push(item);\n            }\n          }\n          this.absences = absencesList;\n        } else {\n          this.absences = x;\n        }\n        this.periods = y;\n        y.forEach((p) => {\n          this.periodMap.set(p.name, p);\n        });\n        this.classes = z;\n      })\n      .subscribe(() => {\n        // 全部取回後，進行處理\n        if (this.classes && this.classes.length) {\n          // 指定目前班級為第一個班級\n          this.selClass = this.classes[0];\n          // 訂閱班級異動\n          this.classSubject$.subscribe((c) => {\n            rx.Observable.combineLatest(\n              this.appService.getClassStudentsLeave(c, this.getDateString(this.currentDate)), this.appService.getRollcallState(c), (studs, complete) => {\n                this.students = studs;\n                this.completed = complete;\n              })\n              .subscribe();\n          });\n          // 切換班級\n          this.toggleClassDate();\n        }\n      });\n  }\n  getDateString(dateTime: Date): string {\n    return dateTime.getFullYear() + \"/\" + (dateTime.getMonth() + 1) + \"/\" + dateTime.getDate();\n  }\n\n  checkDate(input: string) {\n    var d = Date.parse(input);\n    if (d) {\n      this.setCurrentDate(new Date(d));\n    }\n    else {\n      this.inputDate = input;\n    }\n  }\n\n  setCurrentDate(target: Date, shift?: number) {\n    target = new Date(target);\n    if (shift) {\n      target.setDate(target.getDate() + shift);\n    }\n    if (this.getDateString(this.currentDate) != this.getDateString(target)) {\n      this.currentDate = target;\n      this.toggleClassDate();\n    }\n    this.inputDate = this.getDateString(this.currentDate);\n  }\n\n  /**切換班級或缺曠日期，取得「該日學生缺曠」、「點名完成」狀態 */\n  toggleClassDate(targetClass?: Class) {\n    if (targetClass)\n      this.selClass = targetClass;\n    if (this.selClass) {\n      this.classSubject$.next(this.selClass);\n    }\n  }\n\n\n  /**假別簡稱 */\n  toShort(name: string): string {\n    for (let n of this.absences) {\n      if (n.name == name) {\n        return n.abbreviation;\n      }\n    }\n\n    return '';\n  }\n\n  /**設定全部學生該節次統一假別 */\n  setAllStudentsAbs(period: Period) {\n    if (period && this.currAbs) {\n      this.students.forEach((stu) => {\n        stu.setAbsence(period.name, this.currAbs.name);\n      });\n    }\n  }\n\n  /**設定單一學生所有節次統一假別 */\n  setStudentAllPeriodAbs(stu) {\n    if (stu && this.currAbs) {\n      this.periods.forEach((period: Period) => {\n        stu.setAbsence(period.name, this.currAbs.name);\n      });\n    }\n  }\n\n  /**設定單一學生單一節次假別 */\n  setStudentPeroidAbs(stu, period) {\n    if (stu && period && this.currAbs) {\n      if (stu.leaveList.has(period.name)) {\n        // 與上次相同即清除\n        if (stu.leaveList.get(period.name).absName == this.currAbs.name) {\n          stu.setAbsence(period.name, this.clearAbs.name);\n        }\n        else {\n          stu.setAbsence(period.name, this.currAbs.name);\n        }\n      } else {\n        stu.setAbsence(period.name, this.currAbs.name);\n      }\n    }\n  }\n\n  /**儲存點名結果 */\n  saveData() {\n    let data = [];\n\n    this.students.forEach((s) => {\n      let tmpDetail: string = '';\n      s.leaveList.forEach((value, key) => {\n        let periodName = s.leaveList.get(key).periodName;\n        let periodType = this.periodMap.get(periodName).type;\n        let absName = s.leaveList.get(key).absName;\n        tmpDetail += `<Period AbsenceType=\"${absName}\" AttendanceType=\"${periodType}\">${periodName}</Period>`;\n      });\n\n      data.push({\n        sid: s.sid,\n        detail: (tmpDetail) ? `<Attendance>${tmpDetail}</Attendance>` : ''\n      });\n    });\n\n    this.appService.saveStudentLeave(this.selClass, this.getDateString(this.currentDate), data).subscribe(() => {\n      // 重取缺曠狀態\n      this.toggleClassDate();\n    });\n  }\n\n}\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppService } from \"./app.service\";\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [AppService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable, NgZone } from '@angular/core';\nimport { Class, Student, Absence, Period, Leave, Config } from \"./help-class\";\nimport * as Rx from \"rxjs/Rx\";\n\ntype SendOptions = { contact: string, service: string, body: any, map: (rsp) => any };\n\n@Injectable()\nexport class AppService {\n\n  // p.kcbs.hc.edu.tw\n\n  constructor(private zone: NgZone) { }\n\n  /**呼叫 gadget service */\n  private send(opts: SendOptions): Rx.Observable<any> {\n    return Rx.Observable.create((subj$) => {\n      let connection = gadget.getContract(opts.contact);\n      connection.send({\n        service: opts.service,\n        body: opts.body,\n        result: (response, error) => {\n          if (error !== null) {\n            subj$.error(error);\n          } else {\n            this.zone.run(() => {\n              subj$.next(opts.map(response));\n              subj$.complete();\n            });\n          }\n        }\n      });\n    });\n  }\n\n  /**取得老師帶班 */\n  getMyClass(): Rx.Observable<Class[]> {\n\n    return this.send({\n      contact: \"cloud.teacher\",\n      service: \"beta.GetMyClass\",\n      body: \"\",\n      map: (rsp) => {\n        let classes = new Array<Class>();\n        if (rsp.Class) {\n          rsp.Class = [].concat(rsp.Class || []);\n          rsp.Class.forEach((item) => {\n            classes.push(new Class(item.ClassId, item.ClassName, item.GradeYear));\n          });\n        }\n        return classes;\n      }\n    }) as Rx.Observable<Class[]>;\n  }\n\n  /**取得節次 */\n  getPeriods(): Rx.Observable<Period[]> {\n\n    return this.send({\n      contact: \"cloud.public\",\n      service: \"beta.GetSystemConfig\",\n      body: { Name: '節次對照表' },\n      map: (rsp) => {\n        let periods = new Array<Period>();\n        if (rsp.List && rsp.List.Content && rsp.List.Content.Periods && rsp.List.Content.Periods.Period) {\n          rsp.List.Content.Periods.Period = [].concat(rsp.List.Content.Periods.Period || []);\n          rsp.List.Content.Periods.Period.forEach((item) => {\n            periods.push(new Period(item.Name, Number(item.Sort), item.Type));\n          });\n          // 排序\n          periods.sort((a, b) => {\n            if (a.sort > b.sort) {\n              return 1;\n            }\n            if (a.sort < b.sort) {\n              return -1;\n            }\n            return 0;\n          });\n        }\n        return periods;\n      }\n    }) as Rx.Observable<Period[]>;\n  }\n\n  /**取得假別 */\n  getAbsences(): Rx.Observable<Absence[]> {\n\n    return this.send({\n      contact: \"cloud.public\",\n      service: \"beta.GetSystemConfig\",\n      body: { Name: '假別對照表' },\n      map: (rsp) => {\n        let absences = new Array<Absence>();\n        if (rsp.List && rsp.List.Content && rsp.List.Content.AbsenceList && rsp.List.Content.AbsenceList.Absence) {\n          rsp.List.Content.AbsenceList.Absence = [].concat(rsp.List.Content.AbsenceList.Absence || []);\n          rsp.List.Content.AbsenceList.Absence.forEach((item) => {\n            absences.push(new Absence(item.Name, item.Abbreviation));\n          });\n        }\n        return absences;\n      }\n    }) as Rx.Observable<Absence[]>;\n  }\n\n  /**取得今天某班級點名狀態 */\n  getRollcallState(selClass: Class): Rx.Observable<boolean> {\n\n    return this.send({\n      contact: \"p_kcbs.rollCallBook.teacher\",\n      service: \"_.checkTodayRollCall\",\n      body: { classId: selClass.classId },\n      map: (rsp) => {\n        return rsp.completed;\n      }\n    }) as Rx.Observable<boolean>;\n  }\n\n  /**取得班級學生及今天請假狀態 */\n  getClassStudentsLeave(selClass: Class, occurDate:string): Rx.Observable<Student[]> {\n\n    return this.send({\n      contact: \"p_kcbs.rollCallBook.teacher\",\n      service: \"_.getStudentAttendance\",\n      body: { classId: selClass.classId , OccurDate:occurDate},\n      map: (rsp) => {\n        let students = new Array<Student>();\n        if (rsp.Student) {\n          let stus = [].concat(rsp.Student || []);\n          stus.forEach((item) => {\n            let leaves: Map<string, Leave> = new Map<string, Leave>();\n            let orileaves: Map<string, Leave> = new Map<string, Leave>();\n            if (item.Detail && item.Detail.Attendance && item.Detail.Attendance.Period) {\n              let periods: any = [].concat(item.Detail.Attendance.Period || []);\n              periods.forEach((p) => {\n                leaves.set(p['@text'], new Leave(p['@text'], p.AbsenceType));\n                orileaves.set(p['@text'], new Leave(p['@text'], p.AbsenceType));\n              });\n            }\n            students.push(new Student(item.StudentId, item.StudentName, item.SeatNo, leaves, orileaves));\n          });\n        }\n        return students;\n      }\n    }) as Rx.Observable<Student[]>;\n  }\n\n  /**儲存學生請假狀況 */\n  saveStudentLeave(selClass, occurDate, data) {\n\n    return this.send({\n      contact: \"p_kcbs.rollCallBook.teacher\",\n      service: \"_.setStudentAttendance\",\n      body: {\n        classId: selClass.classId,\n        OccurDate: occurDate,\n        students: { student: data }\n      },\n      map: (rsp) => {\n        return rsp.complete;\n      }\n    }) as Rx.Observable<boolean>;\n  }\n\n  /**取得班導師點名設定 */\n  getConfig(): Rx.Observable<Config> {\n\n    return this.send({\n      contact: \"cloud.public\",\n      service: \"beta.GetSystemConfig\",\n      body: { Name: '班導師點名設定' },\n      map: (rsp) => {\n        const absenceNames = new Array<string>();\n        let crossDate = false;\n\n        if (rsp.List && rsp.List.Content && rsp.List.Content.AbsenceList && rsp.List.Content.AbsenceList.Absence) {\n          rsp.List.Content.AbsenceList.Absence = [].concat(rsp.List.Content.AbsenceList.Absence || []);\n          rsp.List.Content.AbsenceList.Absence.forEach((item) => {\n            if (item['@text'] === 'True') {\n              absenceNames.push(item.Name);\n            }\n          });\n        }\n        if (rsp.List && rsp.List.Content && rsp.List.Content.AbsenceList && rsp.List.Content.AbsenceList.CrossDate) {\n          crossDate = (rsp.List.Content.AbsenceList.CrossDate === 'True');\n        }\n        return {\n          absenceNames: absenceNames,\n          crossDate: crossDate,\n        };\n      }\n    }) as Rx.Observable<Config>;\n  }\n\n}\n","/**班級 */\nexport class Class {\n  constructor(public classId, public className, public gradeYear) {\n    this.classId = classId;\n    this.className = className;\n    this.gradeYear = gradeYear;\n  }\n}\n\n/**學生 */\nexport class Student {\n  constructor(public sid, public name:string, public seatNo:number, public leaveList: Map<string, Leave>, public orileaveList: Map<string, Leave>) {\n    this.sid = sid;\n    this.name = name;\n    this.seatNo = seatNo;\n    this.leaveList = leaveList || new Map<string, Leave>();\n    this.orileaveList = orileaveList || new Map<string, Leave>();\n  }\n\n  setAbsence(periodName: string, absName: string) {\n    if (periodName) {\n      if (absName) {\n        this.leaveList.set(periodName, new Leave(periodName, absName));\n      }\n      else {\n        this.leaveList.delete(periodName);\n      }\n    }\n  }\n}\n\n/**假別及簡稱 */\nexport class Absence {\n  constructor(public name: string, public abbreviation: string) {\n    this.name = name;\n    this.abbreviation = abbreviation;\n  }\n}\n\n/**節次 */\nexport class Period {\n  constructor(public name: string, public sort: number, public type: string) {\n    this.name = name;\n    this.sort = sort;\n    this.type = type;\n  }\n}\n\n/**學生請假的類別 */\nexport class Leave {\n  constructor(public periodName: string, public absName: string) {\n    this.periodName = periodName;\n    this.absName = absName;\n  }\n}\n\n/**班導師點名設定 */\nexport interface Config {\n  absenceNames: string[];\n  crossDate: boolean;\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}